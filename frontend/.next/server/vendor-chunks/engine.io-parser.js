"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/engine.io-parser";
exports.ids = ["vendor-chunks/engine.io-parser"];
exports.modules = {

/***/ "(ssr)/../node_modules/engine.io-parser/build/esm/commons.js":
/*!*************************************************************!*\
  !*** ../node_modules/engine.io-parser/build/esm/commons.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_PACKET: () => (/* binding */ ERROR_PACKET),\n/* harmony export */   PACKET_TYPES: () => (/* binding */ PACKET_TYPES),\n/* harmony export */   PACKET_TYPES_REVERSE: () => (/* binding */ PACKET_TYPES_REVERSE)\n/* harmony export */ });\nconst PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key)=>{\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = {\n    type: \"error\",\n    data: \"parser error\"\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvYnVpbGQvZXNtL2NvbW1vbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsTUFBTUEsZUFBZUMsT0FBT0MsTUFBTSxDQUFDLE9BQU8sdUJBQXVCO0FBQ2pFRixZQUFZLENBQUMsT0FBTyxHQUFHO0FBQ3ZCQSxZQUFZLENBQUMsUUFBUSxHQUFHO0FBQ3hCQSxZQUFZLENBQUMsT0FBTyxHQUFHO0FBQ3ZCQSxZQUFZLENBQUMsT0FBTyxHQUFHO0FBQ3ZCQSxZQUFZLENBQUMsVUFBVSxHQUFHO0FBQzFCQSxZQUFZLENBQUMsVUFBVSxHQUFHO0FBQzFCQSxZQUFZLENBQUMsT0FBTyxHQUFHO0FBQ3ZCLE1BQU1HLHVCQUF1QkYsT0FBT0MsTUFBTSxDQUFDO0FBQzNDRCxPQUFPRyxJQUFJLENBQUNKLGNBQWNLLE9BQU8sQ0FBQ0MsQ0FBQUE7SUFDOUJILG9CQUFvQixDQUFDSCxZQUFZLENBQUNNLElBQUksQ0FBQyxHQUFHQTtBQUM5QztBQUNBLE1BQU1DLGVBQWU7SUFBRUMsTUFBTTtJQUFTQyxNQUFNO0FBQWU7QUFDQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tcGFyc2VyL2J1aWxkL2VzbS9jb21tb25zLmpzP2E3ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUEFDS0VUX1RZUEVTID0gT2JqZWN0LmNyZWF0ZShudWxsKTsgLy8gbm8gTWFwID0gbm8gcG9seWZpbGxcclxuUEFDS0VUX1RZUEVTW1wib3BlblwiXSA9IFwiMFwiO1xyXG5QQUNLRVRfVFlQRVNbXCJjbG9zZVwiXSA9IFwiMVwiO1xyXG5QQUNLRVRfVFlQRVNbXCJwaW5nXCJdID0gXCIyXCI7XHJcblBBQ0tFVF9UWVBFU1tcInBvbmdcIl0gPSBcIjNcIjtcclxuUEFDS0VUX1RZUEVTW1wibWVzc2FnZVwiXSA9IFwiNFwiO1xyXG5QQUNLRVRfVFlQRVNbXCJ1cGdyYWRlXCJdID0gXCI1XCI7XHJcblBBQ0tFVF9UWVBFU1tcIm5vb3BcIl0gPSBcIjZcIjtcclxuY29uc3QgUEFDS0VUX1RZUEVTX1JFVkVSU0UgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG5PYmplY3Qua2V5cyhQQUNLRVRfVFlQRVMpLmZvckVhY2goa2V5ID0+IHtcclxuICAgIFBBQ0tFVF9UWVBFU19SRVZFUlNFW1BBQ0tFVF9UWVBFU1trZXldXSA9IGtleTtcclxufSk7XHJcbmNvbnN0IEVSUk9SX1BBQ0tFVCA9IHsgdHlwZTogXCJlcnJvclwiLCBkYXRhOiBcInBhcnNlciBlcnJvclwiIH07XHJcbmV4cG9ydCB7IFBBQ0tFVF9UWVBFUywgUEFDS0VUX1RZUEVTX1JFVkVSU0UsIEVSUk9SX1BBQ0tFVCB9O1xyXG4iXSwibmFtZXMiOlsiUEFDS0VUX1RZUEVTIiwiT2JqZWN0IiwiY3JlYXRlIiwiUEFDS0VUX1RZUEVTX1JFVkVSU0UiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsIkVSUk9SX1BBQ0tFVCIsInR5cGUiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/engine.io-parser/build/esm/commons.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/engine.io-parser/build/esm/decodePacket.js":
/*!******************************************************************!*\
  !*** ../node_modules/engine.io-parser/build/esm/decodePacket.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodePacket: () => (/* binding */ decodePacket)\n/* harmony export */ });\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"(ssr)/../node_modules/engine.io-parser/build/esm/commons.js\");\n\nconst decodePacket = (encodedPacket, binaryType)=>{\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        const buffer = Buffer.from(encodedPacket.substring(1), \"base64\");\n        return {\n            type: \"message\",\n            data: mapBinary(buffer, binaryType)\n        };\n    }\n    if (!_commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type]) {\n        return _commons_js__WEBPACK_IMPORTED_MODULE_0__.ERROR_PACKET;\n    }\n    return encodedPacket.length > 1 ? {\n        type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n    } : {\n        type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type]\n    };\n};\nconst mapBinary = (data, binaryType)=>{\n    switch(binaryType){\n        case \"arraybuffer\":\n            if (data instanceof ArrayBuffer) {\n                // from WebSocket & binaryType \"arraybuffer\"\n                return data;\n            } else if (Buffer.isBuffer(data)) {\n                // from HTTP long-polling\n                return data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n            } else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n        case \"nodebuffer\":\n        default:\n            if (Buffer.isBuffer(data)) {\n                // from HTTP long-polling or WebSocket & binaryType \"nodebuffer\" (default)\n                return data;\n            } else {\n                // from WebTransport (Uint8Array)\n                return Buffer.from(data);\n            }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvYnVpbGQvZXNtL2RlY29kZVBhY2tldC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRTtBQUMzRCxNQUFNRSxlQUFlLENBQUNDLGVBQWVDO0lBQ3hDLElBQUksT0FBT0Qsa0JBQWtCLFVBQVU7UUFDbkMsT0FBTztZQUNIRSxNQUFNO1lBQ05DLE1BQU1DLFVBQVVKLGVBQWVDO1FBQ25DO0lBQ0o7SUFDQSxNQUFNQyxPQUFPRixjQUFjSyxNQUFNLENBQUM7SUFDbEMsSUFBSUgsU0FBUyxLQUFLO1FBQ2QsTUFBTUksU0FBU0MsT0FBT0MsSUFBSSxDQUFDUixjQUFjUyxTQUFTLENBQUMsSUFBSTtRQUN2RCxPQUFPO1lBQ0hQLE1BQU07WUFDTkMsTUFBTUMsVUFBVUUsUUFBUUw7UUFDNUI7SUFDSjtJQUNBLElBQUksQ0FBQ0gsNkRBQW9CLENBQUNJLEtBQUssRUFBRTtRQUM3QixPQUFPTCxxREFBWUE7SUFDdkI7SUFDQSxPQUFPRyxjQUFjVSxNQUFNLEdBQUcsSUFDeEI7UUFDRVIsTUFBTUosNkRBQW9CLENBQUNJLEtBQUs7UUFDaENDLE1BQU1ILGNBQWNTLFNBQVMsQ0FBQztJQUNsQyxJQUNFO1FBQ0VQLE1BQU1KLDZEQUFvQixDQUFDSSxLQUFLO0lBQ3BDO0FBQ1IsRUFBRTtBQUNGLE1BQU1FLFlBQVksQ0FBQ0QsTUFBTUY7SUFDckIsT0FBUUE7UUFDSixLQUFLO1lBQ0QsSUFBSUUsZ0JBQWdCUSxhQUFhO2dCQUM3Qiw0Q0FBNEM7Z0JBQzVDLE9BQU9SO1lBQ1gsT0FDSyxJQUFJSSxPQUFPSyxRQUFRLENBQUNULE9BQU87Z0JBQzVCLHlCQUF5QjtnQkFDekIsT0FBT0EsS0FBS0csTUFBTSxDQUFDTyxLQUFLLENBQUNWLEtBQUtXLFVBQVUsRUFBRVgsS0FBS1csVUFBVSxHQUFHWCxLQUFLWSxVQUFVO1lBQy9FLE9BQ0s7Z0JBQ0QsaUNBQWlDO2dCQUNqQyxPQUFPWixLQUFLRyxNQUFNO1lBQ3RCO1FBQ0osS0FBSztRQUNMO1lBQ0ksSUFBSUMsT0FBT0ssUUFBUSxDQUFDVCxPQUFPO2dCQUN2QiwwRUFBMEU7Z0JBQzFFLE9BQU9BO1lBQ1gsT0FDSztnQkFDRCxpQ0FBaUM7Z0JBQ2pDLE9BQU9JLE9BQU9DLElBQUksQ0FBQ0w7WUFDdkI7SUFDUjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvYnVpbGQvZXNtL2RlY29kZVBhY2tldC5qcz85MWU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVSUk9SX1BBQ0tFVCwgUEFDS0VUX1RZUEVTX1JFVkVSU0UgfSBmcm9tIFwiLi9jb21tb25zLmpzXCI7XHJcbmV4cG9ydCBjb25zdCBkZWNvZGVQYWNrZXQgPSAoZW5jb2RlZFBhY2tldCwgYmluYXJ5VHlwZSkgPT4ge1xyXG4gICAgaWYgKHR5cGVvZiBlbmNvZGVkUGFja2V0ICE9PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogXCJtZXNzYWdlXCIsXHJcbiAgICAgICAgICAgIGRhdGE6IG1hcEJpbmFyeShlbmNvZGVkUGFja2V0LCBiaW5hcnlUeXBlKVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBjb25zdCB0eXBlID0gZW5jb2RlZFBhY2tldC5jaGFyQXQoMCk7XHJcbiAgICBpZiAodHlwZSA9PT0gXCJiXCIpIHtcclxuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShlbmNvZGVkUGFja2V0LnN1YnN0cmluZygxKSwgXCJiYXNlNjRcIik7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogXCJtZXNzYWdlXCIsXHJcbiAgICAgICAgICAgIGRhdGE6IG1hcEJpbmFyeShidWZmZXIsIGJpbmFyeVR5cGUpXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIGlmICghUEFDS0VUX1RZUEVTX1JFVkVSU0VbdHlwZV0pIHtcclxuICAgICAgICByZXR1cm4gRVJST1JfUEFDS0VUO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGVuY29kZWRQYWNrZXQubGVuZ3RoID4gMVxyXG4gICAgICAgID8ge1xyXG4gICAgICAgICAgICB0eXBlOiBQQUNLRVRfVFlQRVNfUkVWRVJTRVt0eXBlXSxcclxuICAgICAgICAgICAgZGF0YTogZW5jb2RlZFBhY2tldC5zdWJzdHJpbmcoMSlcclxuICAgICAgICB9XHJcbiAgICAgICAgOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFBBQ0tFVF9UWVBFU19SRVZFUlNFW3R5cGVdXHJcbiAgICAgICAgfTtcclxufTtcclxuY29uc3QgbWFwQmluYXJ5ID0gKGRhdGEsIGJpbmFyeVR5cGUpID0+IHtcclxuICAgIHN3aXRjaCAoYmluYXJ5VHlwZSkge1xyXG4gICAgICAgIGNhc2UgXCJhcnJheWJ1ZmZlclwiOlxyXG4gICAgICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBmcm9tIFdlYlNvY2tldCAmIGJpbmFyeVR5cGUgXCJhcnJheWJ1ZmZlclwiXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChCdWZmZXIuaXNCdWZmZXIoZGF0YSkpIHtcclxuICAgICAgICAgICAgICAgIC8vIGZyb20gSFRUUCBsb25nLXBvbGxpbmdcclxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmJ1ZmZlci5zbGljZShkYXRhLmJ5dGVPZmZzZXQsIGRhdGEuYnl0ZU9mZnNldCArIGRhdGEuYnl0ZUxlbmd0aCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBmcm9tIFdlYlRyYW5zcG9ydCAoVWludDhBcnJheSlcclxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmJ1ZmZlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIGNhc2UgXCJub2RlYnVmZmVyXCI6XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkge1xyXG4gICAgICAgICAgICAgICAgLy8gZnJvbSBIVFRQIGxvbmctcG9sbGluZyBvciBXZWJTb2NrZXQgJiBiaW5hcnlUeXBlIFwibm9kZWJ1ZmZlclwiIChkZWZhdWx0KVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBmcm9tIFdlYlRyYW5zcG9ydCAoVWludDhBcnJheSlcclxuICAgICAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShkYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG4iXSwibmFtZXMiOlsiRVJST1JfUEFDS0VUIiwiUEFDS0VUX1RZUEVTX1JFVkVSU0UiLCJkZWNvZGVQYWNrZXQiLCJlbmNvZGVkUGFja2V0IiwiYmluYXJ5VHlwZSIsInR5cGUiLCJkYXRhIiwibWFwQmluYXJ5IiwiY2hhckF0IiwiYnVmZmVyIiwiQnVmZmVyIiwiZnJvbSIsInN1YnN0cmluZyIsImxlbmd0aCIsIkFycmF5QnVmZmVyIiwiaXNCdWZmZXIiLCJzbGljZSIsImJ5dGVPZmZzZXQiLCJieXRlTGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/engine.io-parser/build/esm/decodePacket.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/engine.io-parser/build/esm/encodePacket.js":
/*!******************************************************************!*\
  !*** ../node_modules/engine.io-parser/build/esm/encodePacket.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacket: () => (/* binding */ encodePacket),\n/* harmony export */   encodePacketToBinary: () => (/* binding */ encodePacketToBinary)\n/* harmony export */ });\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"(ssr)/../node_modules/engine.io-parser/build/esm/commons.js\");\n\nconst encodePacket = ({ type, data }, supportsBinary, callback)=>{\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n        return callback(supportsBinary ? data : \"b\" + toBuffer(data, true).toString(\"base64\"));\n    }\n    // plain string\n    return callback(_commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES[type] + (data || \"\"));\n};\nconst toBuffer = (data, forceBufferConversion)=>{\n    if (Buffer.isBuffer(data) || data instanceof Uint8Array && !forceBufferConversion) {\n        return data;\n    } else if (data instanceof ArrayBuffer) {\n        return Buffer.from(data);\n    } else {\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n    }\n};\nlet TEXT_ENCODER;\nfunction encodePacketToBinary(packet, callback) {\n    if (packet.data instanceof ArrayBuffer || ArrayBuffer.isView(packet.data)) {\n        return callback(toBuffer(packet.data, false));\n    }\n    encodePacket(packet, true, (encoded)=>{\n        if (!TEXT_ENCODER) {\n            // lazily created for compatibility with Node.js 10\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvYnVpbGQvZXNtL2VuY29kZVBhY2tldC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDckMsTUFBTUMsZUFBZSxDQUFDLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFLEVBQUVDLGdCQUFnQkM7SUFDekQsSUFBSUYsZ0JBQWdCRyxlQUFlQSxZQUFZQyxNQUFNLENBQUNKLE9BQU87UUFDekQsT0FBT0UsU0FBU0QsaUJBQWlCRCxPQUFPLE1BQU1LLFNBQVNMLE1BQU0sTUFBTU0sUUFBUSxDQUFDO0lBQ2hGO0lBQ0EsZUFBZTtJQUNmLE9BQU9KLFNBQVNMLHFEQUFZLENBQUNFLEtBQUssR0FBSUMsQ0FBQUEsUUFBUSxFQUFDO0FBQ25ELEVBQUU7QUFDRixNQUFNSyxXQUFXLENBQUNMLE1BQU1PO0lBQ3BCLElBQUlDLE9BQU9DLFFBQVEsQ0FBQ1QsU0FDZkEsZ0JBQWdCVSxjQUFjLENBQUNILHVCQUF3QjtRQUN4RCxPQUFPUDtJQUNYLE9BQ0ssSUFBSUEsZ0JBQWdCRyxhQUFhO1FBQ2xDLE9BQU9LLE9BQU9HLElBQUksQ0FBQ1g7SUFDdkIsT0FDSztRQUNELE9BQU9RLE9BQU9HLElBQUksQ0FBQ1gsS0FBS1ksTUFBTSxFQUFFWixLQUFLYSxVQUFVLEVBQUViLEtBQUtjLFVBQVU7SUFDcEU7QUFDSjtBQUNBLElBQUlDO0FBQ0csU0FBU0MscUJBQXFCQyxNQUFNLEVBQUVmLFFBQVE7SUFDakQsSUFBSWUsT0FBT2pCLElBQUksWUFBWUcsZUFBZUEsWUFBWUMsTUFBTSxDQUFDYSxPQUFPakIsSUFBSSxHQUFHO1FBQ3ZFLE9BQU9FLFNBQVNHLFNBQVNZLE9BQU9qQixJQUFJLEVBQUU7SUFDMUM7SUFDQUYsYUFBYW1CLFFBQVEsTUFBTUMsQ0FBQUE7UUFDdkIsSUFBSSxDQUFDSCxjQUFjO1lBQ2YsbURBQW1EO1lBQ25EQSxlQUFlLElBQUlJO1FBQ3ZCO1FBQ0FqQixTQUFTYSxhQUFhSyxNQUFNLENBQUNGO0lBQ2pDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vZW5jb2RlUGFja2V0LmpzPzU2ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUEFDS0VUX1RZUEVTIH0gZnJvbSBcIi4vY29tbW9ucy5qc1wiO1xyXG5leHBvcnQgY29uc3QgZW5jb2RlUGFja2V0ID0gKHsgdHlwZSwgZGF0YSB9LCBzdXBwb3J0c0JpbmFyeSwgY2FsbGJhY2spID0+IHtcclxuICAgIGlmIChkYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgQXJyYXlCdWZmZXIuaXNWaWV3KGRhdGEpKSB7XHJcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHN1cHBvcnRzQmluYXJ5ID8gZGF0YSA6IFwiYlwiICsgdG9CdWZmZXIoZGF0YSwgdHJ1ZSkudG9TdHJpbmcoXCJiYXNlNjRcIikpO1xyXG4gICAgfVxyXG4gICAgLy8gcGxhaW4gc3RyaW5nXHJcbiAgICByZXR1cm4gY2FsbGJhY2soUEFDS0VUX1RZUEVTW3R5cGVdICsgKGRhdGEgfHwgXCJcIikpO1xyXG59O1xyXG5jb25zdCB0b0J1ZmZlciA9IChkYXRhLCBmb3JjZUJ1ZmZlckNvbnZlcnNpb24pID0+IHtcclxuICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoZGF0YSkgfHxcclxuICAgICAgICAoZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgIWZvcmNlQnVmZmVyQ29udmVyc2lvbikpIHtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xyXG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShkYXRhKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShkYXRhLmJ1ZmZlciwgZGF0YS5ieXRlT2Zmc2V0LCBkYXRhLmJ5dGVMZW5ndGgpO1xyXG4gICAgfVxyXG59O1xyXG5sZXQgVEVYVF9FTkNPREVSO1xyXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlUGFja2V0VG9CaW5hcnkocGFja2V0LCBjYWxsYmFjaykge1xyXG4gICAgaWYgKHBhY2tldC5kYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgQXJyYXlCdWZmZXIuaXNWaWV3KHBhY2tldC5kYXRhKSkge1xyXG4gICAgICAgIHJldHVybiBjYWxsYmFjayh0b0J1ZmZlcihwYWNrZXQuZGF0YSwgZmFsc2UpKTtcclxuICAgIH1cclxuICAgIGVuY29kZVBhY2tldChwYWNrZXQsIHRydWUsIGVuY29kZWQgPT4ge1xyXG4gICAgICAgIGlmICghVEVYVF9FTkNPREVSKSB7XHJcbiAgICAgICAgICAgIC8vIGxhemlseSBjcmVhdGVkIGZvciBjb21wYXRpYmlsaXR5IHdpdGggTm9kZS5qcyAxMFxyXG4gICAgICAgICAgICBURVhUX0VOQ09ERVIgPSBuZXcgVGV4dEVuY29kZXIoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2FsbGJhY2soVEVYVF9FTkNPREVSLmVuY29kZShlbmNvZGVkKSk7XHJcbiAgICB9KTtcclxufVxyXG4iXSwibmFtZXMiOlsiUEFDS0VUX1RZUEVTIiwiZW5jb2RlUGFja2V0IiwidHlwZSIsImRhdGEiLCJzdXBwb3J0c0JpbmFyeSIsImNhbGxiYWNrIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJ0b0J1ZmZlciIsInRvU3RyaW5nIiwiZm9yY2VCdWZmZXJDb252ZXJzaW9uIiwiQnVmZmVyIiwiaXNCdWZmZXIiLCJVaW50OEFycmF5IiwiZnJvbSIsImJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJieXRlTGVuZ3RoIiwiVEVYVF9FTkNPREVSIiwiZW5jb2RlUGFja2V0VG9CaW5hcnkiLCJwYWNrZXQiLCJlbmNvZGVkIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/engine.io-parser/build/esm/encodePacket.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/engine.io-parser/build/esm/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/engine.io-parser/build/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPacketDecoderStream: () => (/* binding */ createPacketDecoderStream),\n/* harmony export */   createPacketEncoderStream: () => (/* binding */ createPacketEncoderStream),\n/* harmony export */   decodePacket: () => (/* reexport safe */ _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket),\n/* harmony export */   decodePayload: () => (/* binding */ decodePayload),\n/* harmony export */   encodePacket: () => (/* reexport safe */ _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacket),\n/* harmony export */   encodePayload: () => (/* binding */ encodePayload),\n/* harmony export */   protocol: () => (/* binding */ protocol)\n/* harmony export */ });\n/* harmony import */ var _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encodePacket.js */ \"(ssr)/../node_modules/engine.io-parser/build/esm/encodePacket.js\");\n/* harmony import */ var _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodePacket.js */ \"(ssr)/../node_modules/engine.io-parser/build/esm/decodePacket.js\");\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commons.js */ \"(ssr)/../node_modules/engine.io-parser/build/esm/commons.js\");\n\n\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback)=>{\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i)=>{\n        // force base64 encoding for binary packets\n        (0,_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacket)(packet, false, (encodedPacket)=>{\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType)=>{\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for(let i = 0; i < encodedPackets.length; i++){\n        const decodedPacket = (0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket)(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nfunction createPacketEncoderStream() {\n    return new TransformStream({\n        transform (packet, controller) {\n            (0,_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacketToBinary)(packet, (encodedPacket)=>{\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                } else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                } else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk)=>acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for(let i = 0; i < size; i++){\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nfunction createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */ ;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            chunks.push(chunk);\n            while(true){\n                if (state === 0 /* READ_HEADER */ ) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */ ;\n                    } else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */ ;\n                    } else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */ ;\n                    }\n                } else if (state === 1 /* READ_EXTENDED_LENGTH_16 */ ) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */ ;\n                } else if (state === 2 /* READ_EXTENDED_LENGTH_64 */ ) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(_commons_js__WEBPACK_IMPORTED_MODULE_2__.ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */ ;\n                } else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue((0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket)(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */ ;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(_commons_js__WEBPACK_IMPORTED_MODULE_2__.ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nconst protocol = 4;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/engine.io-parser/build/esm/index.js\n");

/***/ })

};
;